services:
  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - USER_SERVICE_URL=http://user-service:3001
      - VEHICLE_SERVICE_URL=http://vehicle-service:3002
      - BOOKING_SERVICE_URL=http://booking-service:3003
      - LOG_LEVEL=info
    depends_on:
      - user-service
      - vehicle-service
      - booking-service
    networks:
      - car-rental-network

  # User Service
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./uploads/avatar:/usr/src/app/uploads/avatar
    environment:
      - NODE_ENV=development
      - PORT=3001
      - JWT_SECRET=your_jwt_secret_key
      - JWT_EXPIRES_IN=24h
    networks:
      - car-rental-network

  # Vehicle Service
  vehicle-service:
    build:
      context: ./backend/vehicle-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    volumes:
      - ./uploads/vehicles:/usr/src/app/uploads/vehicles
    environment:
      - PORT=3002
      - USER_SERVICE_URL=http://user-service:3001
      - JWT_SECRET=your_jwt_secret_key
      - JWT_EXPIRES_IN=24h
      - NODE_ENV=development
    networks:
      - car-rental-network

  # Booking Service
  booking-service:
    build:
      context: ./backend/booking-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - USER_SERVICE_URL=http://user-service:3001
      - VEHICLE_SERVICE_URL=http://vehicle-service:3002
      - JWT_SECRET=your_jwt_secret_key
      - JWT_EXPIRES_IN=24h
      - NODE_ENV=development
    networks:
      - car-rental-network

  # # Payment Service
  # payment-service:
  #   build:
  #     context: ./backend/payment-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3004:3004"
  #   depends_on:
  #     - mongodb
  #     - redis
  #     - rabbitmq
  #   networks:
  #     - car-rental-network

  # # Notification Service
  # notification-service:
  #   build:
  #     context: ./backend/notification-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3005:3005"
  #   depends_on:
  #     - mongodb
  #     - redis
  #     - rabbitmq
  #   networks:
  #     - car-rental-network

  # # Review Service
  # review-service:
  #   build:
  #     context: ./backend/review-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3006:3006"
  #   depends_on:
  #     - mongodb
  #     - redis
  #   networks:
  #     - car-rental-network

  # # Frontend
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - api-gateway
  #   networks:
  #     - car-rental-network

networks:
  car-rental-network:
    driver: bridge